"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ApiClient", {
  enumerable: true,
  get: function get() {
    return _ApiClient["default"];
  }
});
Object.defineProperty(exports, "Heure", {
  enumerable: true,
  get: function get() {
    return _Heure["default"];
  }
});
Object.defineProperty(exports, "HelloControllerApi", {
  enumerable: true,
  get: function get() {
    return _HelloControllerApi["default"];
  }
});

var _ApiClient = _interopRequireDefault(require("./ApiClient"));

var _Heure = _interopRequireDefault(require("./model/Heure"));

var _HelloControllerApi = _interopRequireDefault(require("./api/HelloControllerApi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

/**
* Api_Documentation.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApiDocumentation = require('index'); // See note below*.
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApiDocumentation.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApiDocumentation.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
var apiInstance = new _HelloControllerApi["default"](); // window.apiInstance = apiInstance;

apiInstance.helloUsingGET(function (error, data, response) {
  if (error) {
    console.error(error);
  } else {
    console.log('API called successfully. Returned data: ' + data);
  }
});